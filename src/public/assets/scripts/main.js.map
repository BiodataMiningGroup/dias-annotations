{"version":3,"sources":["annotations/main.js","annotations/controllers/AnnotatorController.js","annotations/controllers/CanvasController.js","annotations/controllers/SVGController.js","annotations/directives/ngSvg.js"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;ACLA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACVA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACzCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AC3DA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"main.js","sourcesContent":["/**\n * @namespace dias.annotations\n * @description The DIAS annotations module.\n */\nangular.module('dias.annotations', ['dias.api']);\n","/**\n * @namespace dias.annotations\n * @ngdoc controller\n * @name AnnotatorController\n * @memberOf dias.annotations\n * @description Main controller of the Annotator application.\n */\nangular.module('dias.annotations').controller('AnnotatorController', function ($scope, $element) {\n\t\t\"use strict\";\n\t}\n);","/**\n * @namespace dias.annotations\n * @ngdoc controller\n * @name CanvasController\n * @memberOf dias.annotations\n * @description Main controller for the annotation canvas element\n */\nangular.module('dias.annotations').controller('CanvasController', function ($scope, $element) {\n\t\t\"use strict\";\n\n\t\tvar offsetTop = 0;\n\n\t\t// the current mouse position relative to the canvas container\n\t\t$scope.mouseX = 0;\n\t\t$scope.mouseY = 0;\n\n\t\t// the dimensions of the canvas container\n\t\tvar updateDimensions = function () {\n\t\t\t$scope.width = $element[0].offsetWidth;\n\t\t\t$scope.height = $element[0].offsetHeight;\n\t\t};\n\n\t\tupdateDimensions();\n\n\t\twindow.addEventListener('resize', function () {\n\t\t\t$scope.$apply(updateDimensions);\n\t\t});\n\n\t\t$scope.updateMouse = function (e) {\n\t\t\t$scope.mouseX = e.clientX;\n\t\t\t$scope.mouseY = e.clientY - offsetTop;\n\t\t};\n\n\t\tvar updateOffset = function () {\n\t\t\toffsetTop = $element[0].offsetTop;\n\t\t};\n\n\t\tupdateOffset();\n\n\t\twindow.addEventListener('resize', updateOffset);\n\t}\n);","/**\n * @namespace dias.annotations\n * @ngdoc controller\n * @name SVGController\n * @memberOf dias.annotations\n * @description Controller for the annotation canvas SVG element\n */\nangular.module('dias.annotations').controller('SVGController', function ($scope, $element) {\n\t\t\"use strict\";\n\n\t\tvar scaleStep = 0.05;\n\t\tvar scaleTmp;\n\n\t\t$scope.scale = 1;\n\t\t// translate the elements so they appear to be zooming towards the cursor\n\t\t$scope.scaleTranslateX = 0;\n\t\t$scope.scaleTranslateY = 0;\n\t\t$scope.translateX = 0;\n\t\t$scope.translateY = 0;\n\t\t// mouse position taking zooming and translating into account\n\t\t$scope.relativeMouseX = $scope.mouseX;\n\t\t$scope.relativeMouseY = $scope.mouseY;\n\n\t\tvar updateScaleTranslate = function (scale) {\n\t\t\tscaleTmp = 1 - scale;\n\t\t\t$scope.scaleTranslateX = $scope.relativeMouseX * scaleTmp;\n\t\t\t$scope.scaleTranslateY = $scope.relativeMouseY * scaleTmp;\n\t\t};\n\n\t\tvar updateRelativeMouseX = function (mouseX) {\n\t\t\t$scope.relativeMouseX = (mouseX - $scope.scaleTranslateX) / $scope.scale - $scope.translateX;\n\t\t};\n\n\t\tvar updateRelativeMouseY = function (mouseY) {\n\t\t\t$scope.relativeMouseY = (mouseY - $scope.scaleTranslateY) / $scope.scale - $scope.translateY;\n\t\t};\n\n\t\tvar transform = function (e) {\n\t\t\tif (e.ctrlKey) {\n\t\t\t\t$scope.scale += scaleStep * e.deltaY;\n\t\t\t\te.preventDefault();\n\t\t\t} else {\n\t\t\t\t$scope.translateX += e.deltaX;\n\t\t\t\t$scope.translateY += e.deltaY;\n\t\t\t\t$scope.scale += e.deltaZ;\n\t\t\t}\n\t\t};\n\n\t\t$element.on('wheel', function (e) {\n\t\t\t$scope.$apply(function () { transform(e); });\n\t\t});\n\n\t\t// scale around the cursor\n\t\t// see http://commons.oreilly.com/wiki/index.php/SVG_Essentials/Transforming_the_Coordinate_System#Technique:_Scaling_Around_a_Center_Point\n\t\t$scope.$watch('scale', updateScaleTranslate);\n\n\t\t$scope.$watch('mouseX', updateRelativeMouseX);\n\t\t$scope.$watch('mouseY', updateRelativeMouseY);\n\t}\n);","/**\n * @namespace dias.annotations\n * @ngdoc directive\n * @name ngSVG\n * @memberOf dias.annotations\n * @description A general directive that enables manipulation of SVG \n * attributes like `width` or `x` by Angular.\n */\nangular.forEach(\n\t[\n\t\t'x',\n\t\t'cx',\n\t\t'y',\n\t\t'cy',\n\t\t'r',\n\t\t'width',\n\t\t'height',\n\t\t'transform'\n\t],\n\tfunction(name) {\n\t\tvar ngName = 'ng' + name[0].toUpperCase() + name.slice(1);\n\t\tangular.module('dias.annotations').directive(ngName, function() {\n\t\t\treturn function(scope, element, attrs) {\n\t\t\t\tattrs.$observe(ngName, function(value) {\n\t\t\t\t\tattrs.$set(name, value); \n\t\t\t\t});\n\t\t\t};\n\t\t});\n\t}\n);"],"sourceRoot":"/source/"}